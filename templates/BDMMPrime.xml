<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

    <mergewith point='treePriorTemplates'>

        <subtemplate id='BDMMPrime' class='bdmmprime.distributions.BirthDeathMigrationDistribution' mainid='BDMMPrime.t:$(n)'
                     suppressInputs="bdmmprime.distributions.BirthDeathMigrationDistribution.typeLabel,
                        bdmmprime.distributions.BirthDeathMigrationDistribution.storeNodeTypes,
                        bdmmprime.distributions.BirthDeathMigrationDistribution.tree,
                        bdmmprime.parameterization.CanonicalParameterization.typeSet,
                        bdmmprime.parameterization.SkylineVectorParameter.origin,
                        bdmmprime.parameterization.SkylineMatrixParameter.origin"
                     inlineInputs="bdmmprime.distributions.BirthDeathMigrationDistribution.parameterization">

            <![CDATA[
                <distribution id="BDMMPrime.t:$(n)" spec="bdmmprime.distributions.BirthDeathMigrationDistribution"
                              tree="@Tree.t:$(n)" conditionOnSurvival="false" parallelize="true">

                    <parameterization id="CanonicalBDMMPrimeParameterization.t:$(n)"
                                      spec="bdmmprime.parameterization.CanonicalParameterization">
                        <origin idref="originBDMMPrime.t:$(n)"/>
                        <typeSet idref="typeSetBDMMPrime.t:$(n)"/>
                        <birthRate id="birthRateSVCanonical.t:$(n)" spec="bdmmprime.parameterization.SkylineVectorParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                            <skylineValues id="birthRateCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0"/>
                        </birthRate>
                        <birthRateAmongDemes id="birthRateAmongDemesSMCanonical.t:$(n)" spec="bdmmprime.parameterization.SkylineMatrixParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                            <skylineValues id="birthRateAmongDemesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0"/>
                        </birthRateAmongDemes>
                        <deathRate id="deathRateSVCanonical.t:$(n)" spec="bdmmprime.parameterization.SkylineVectorParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                            <skylineValues id="deathRateCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0"/>
                        </deathRate>
                        <migrationRate id="migrationRateSMCanonical.t:$(n)" spec="bdmmprime.parameterization.SkylineMatrixParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                            <skylineValues id="migrationRateCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0"/>
                        </migrationRate>
                        <samplingRate id="samplingRateSVCanonical.t:$(n)" spec="bdmmprime.parameterization.SkylineVectorParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                            <skylineValues id="samplingRateCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="0.1"/>
                        </samplingRate>
                        <removalProb id="removalProbSVCanonical.t:$(n)" spec="bdmmprime.parameterization.SkylineVectorParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                            <skylineValues id="removalProbCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0" upper="1.0" estimate="false"/>
                        </removalProb>

                        <rhoSampling id="rhoSamplingProbTPCanonical.t:$(n)" spec="bdmmprime.parameterization.TimedParameter" typeSet="@typeSetBDMMPrime.t:$(n)" timesAreAges="true">
                            <origin idref="originBDMMPrime.t:$(n)"/>
                        </rhoSampling>
                    </parameterization>

                    <typeTraitSet id="typeTraitSet.t:$(n)" spec="bdmmprime.util.InitializedTraitSet" traitname="type">
                        <taxa spec="beast.evolution.alignment.TaxonSet" alignment="@$(n)"/>
                    </typeTraitSet>

                    <frequencies id="typeFrequencies.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0"/>
                </distribution>

                <typeSet id="typeSetBDMMPrime.t:$(n)" spec="bdmmprime.parameterization.TypeSet" typeTraitSet="@typeTraitSet.t:$(n)"/>

                <origin spec="beast.core.parameter.RealParameter" id="originBDMMPrime.t:$(n)" value="10.0"/>
                <prior id='originBDMMPrimePrior.t:$(n)' x='@originBDMMPrime.t:$(n)'>
                   <distr spec="beast.math.distributions.OneOnX"/>
                </prior>
  		        <operator id='originBDMMPrimeScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.75" weight="3" parameter="@originBDMMPrime.t:$(n)"/>

  		        <param id="birthRateChangeTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0"/>
  		        <param id="birthRateAmongDemesChangeTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0"/>
  		        <param id="deathRateChangeTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0"/>
  		        <param id="migrationRateChangeTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0"/>
  		        <param id="samplingRateChangeTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0"/>
  		        <param id="removalProbChangeTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0"/>

                <param id="rhoSamplingProbCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="0.0" estimate="false"/>
                <param id="rhoSamplingProbTimesCanonical.t:$(n)" spec="beast.core.parameter.RealParameter" value="0.0" estimate="false"/>

                <logger id="typedTreeLogger.t:$(n)"
                        fileName="$(filebase).$(tree).mapped.trees" logEvery="1000" mode="tree">
                    <log spec="bdmmprime.mapping.TypeMappedTree" id="typeMappedTree.t:$(n)" bdmmDistrib="@BDMMPrime.t:$(n)"
                         mapOnInit="false" remapOnLog="true"
                         frequencies="@typeFrequencies.t:$(n)"
                         typeTraitSet="@typeTraitSet.t:$(n)"
                         typeLabel="type"
                         untypedTree="@Tree.t:$(n)"/>
                </logger>
            ]]>

            <plate fragment="CanonicalBDMMPrimeParameters" var="thisparam"
                   range="birthRate,birthRateAmongDemes,deathRate,migrationRate,samplingRate,removalProb,rhoSamplingProb"/>
            <plate fragment="CanonicalBDMMPrimeParameters" var="thisparam"
                   range="birthRateChangeTimes,birthRateAmongDemesChangeTimes,deathRateChangeTimes,migrationRateChangeTimes,samplingRateChangeTimes,removalProbChangeTimes,rhoSamplingProbTimes"/>

            <connect srcID='BDMMPrime.t:$(n)' targetID='prior' inputName='distribution'
                    if='inposterior(BDMMPrime.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>
                BDMM prior on tree t:$(n)
            </connect>

            <!-- TODO replace these with SA operators. -->
            <plate fragment="TreeOperators" var="m" range="BDMMPrime"/>

            <connect srcID='originBDMMPrime.t:$(n)' targetID='state' inputName='stateNode'
                     if='inposterior(BDMMPrime.t:$(n))
                     and inposterior(Tree.t:$(n))
                     and originBDMMPrime.t:$(n)/estimate=true'/>
            <connect srcID='originBDMMPrimePrior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(BDMMPrime.t:$(n))
                     and inposterior(Tree.t:$(n))
                     and originBDMMPrime.t:$(n)/estimate=true'/>
            <connect srcID='originBDMMPrimeScaler.t:$(n)' targetID='mcmc' inputName='operator'
                     if='inposterior(BDMMPrime.t:$(n))
                     and inposterior(Tree.t:$(n))
                     and originBDMMPrime.t:$(n)/estimate=true'/>
            <connect srcID='originBDMMPrime.t:$(n)' targetID='tracelog' inputName='log'
                     if='inposterior(BDMMPrime.t:$(n))
                     and inposterior(Tree.t:$(n))
                     and originBDMMPrime.t:$(n)/estimate=true'/>

            <connect srcID="typedTreeLogger.t:$(n)" targetID="mcmc" inputName="logger"
                     if='inposterior(BDMMPrime.t:$(n))
                     and inposterior(Tree.t:$(n))
                     and originBDMMPrime.t:$(n)/estimate=true'/>
        </subtemplate>

    </mergewith>
</beast>


